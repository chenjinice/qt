

// 全局变量
var g_map = null;
var g_street = null;
var g_center = [28.1128547,112.8668242];
var g_zoom = 17;
var g_minZoom = 3;
var g_maxZoom = 22;
// obs
var g_index = 0;
var g_layers = [];
var g_arrow_icon = L.icon({ iconUrl:'style/image/arrow.png',iconSize: [15, 15]});
var g_car_icon = L.icon({ iconUrl:'style/image/car.png',iconSize: [15, 15]});


// 测试用的marker
function add_marker(lat,lng){
    lat = lat.toFixed(7);
    lng = lng.toFixed(7);
    var marker = L.marker([lat,lng]).addTo(g_map);
	marker.dragging.enable();
    marker.bindPopup("lat : "+lat+"</br>lng : "+lng);
    marker.on('dragend',function(event){
        var pt = marker.getLatLng();
        var lat_new = pt.lat.toFixed(7);
        var lng_new = pt.lng.toFixed(7);
        marker.setPopupContent("lat : "+lat_new+"</br>lng : "+lng_new);
	});
    marker.source = "map";
    marker.id = g_index++;
    g_layers.push(marker);
}

// 添加车的图标
function add_car(lat,lng,angle,id){
    var index = -1;
    for(i=0;i<g_layers.length;i++){
        var temp = g_layers[i];
        if( (temp.source == "car") && (temp.id == id)){index=i;break;}
	}
	if(index == -1){
        var marker = L.marker([lat,lng],{icon:g_car_icon,rotationAngle:angle,rotationOrigin:'center'}).addTo(g_map);
        marker.id = g_index++;
        marker.source = "car";
        g_layers.push(marker);
	}else{
        g_layers[index].setLatLng([lat,lng]);
        g_layers[index].setRotationAngle(angle);
    }
}

function get_obs_icon(id,source)
{
	var png = "style/image/obs_vision.png";
	if(source == "fusion")png = "style/image/obs_fusion.png";
	var icon = L.icon({ iconUrl:png,iconSize: [20, 20]});
	return icon;
}

// 添加障碍的图标
function add_obs(lat,lng,id,source)
{
    var index = -1;
    var marker = null;
	var myicon = get_obs_icon(id,source);
    lat = lat.toFixed(7);
    lng = lng.toFixed(7);
    for(i=0;i<g_layers.length;i++){
        var temp = g_layers[i];
        if( (temp.source == source) && (temp.id == id)){index=i;break;}
    }
    if(index == -1){
        marker = L.marker([lat,lng],{icon:myicon}).addTo(g_map);
        marker.bindPopup("");
        marker.source = source;
        marker.id = id;
        g_layers.push(marker);
    }else{
        marker = g_layers[index];
        marker.setLatLng([lat,lng]);
    }
    marker.setPopupContent("id : "+id+"</br>lat : "+lat+"</br>lng : "+lng);
}

// 添加车道的折线
function add_lane_line(latlngs,latlngs_rel,id){
    var len = latlngs.length ,i,angle = 0;
    var line_color = "#FF0000";
//    var line_color = "#3388ff";
    if(len == 0 )return;
    for(i=0;i<len;i++){
        if(i<len-1)angle = Math.atan2(latlngs[i+1][1]-latlngs[i][1],latlngs[i+1][0]-latlngs[i][0])*180/Math.PI;
        add_node_point(latlngs[i],latlngs_rel[i],angle);
    }
    if(len>1){
        var polyline = L.polyline(latlngs, {color:line_color,weight:5}).addTo(g_map);
        polyline.bindPopup("laneID="+id);
        polyline.source = "map";
        polyline.id = g_index++;
        g_layers.push(polyline);
    }
}

// 添加车道上点的图标
function add_node_point(latlng,latlng_rel,angle)
{
    var marker = L.marker([latlng[0],latlng[1]],{icon:g_arrow_icon,rotationAngle:angle,rotationOrigin:'center',}).addTo(g_map);
    marker.source = "map";
    marker.bindPopup("lat : "+latlng[0]+"</br>lng : "+latlng[1] +"</br>lat_rel : "+latlng_rel[0]+"</br>lng_rel : "+latlng_rel[1] );
    marker.id = g_index++;
    g_layers.push(marker);
}

// 添加node中心点图标
function add_center_point(lat,lng,n_id,n_region){
    var marker = L.marker([lat,lng]).addTo(g_map);
    marker.bindPopup("id : "+n_id+"</br>region : "+n_region+"</br>lat : "+lat+"</br>lng : "+lng);
    marker.source = "map";
    marker.id = g_index++;
    g_layers.push(marker);
}

// 解析node中的links
function json_links_parse(links,lat,lng)
{
    for(var i in links) {
        var lanes = links[i].lanes;
        for(var j in lanes){
            var points = lanes[j].points;
            var latlngs = [],latlngs_rel = [];
            for(var k in points){
                var p = points[k];
                var plng = ((lng + p.lng)*1e-7).toFixed(7);
                var plat = ((lat + p.lat)*1e-7).toFixed(7);
                latlngs_rel.push([p.lat,p.lng]);
                latlngs.push([plat,plng]);
            }
            add_lane_line(latlngs,latlngs_rel,lanes[j].laneID);
        }
    }
}

// 解析json文件
function json_parse(filename)
{
	$.getJSON(filename,function(data){
        var type = "map";
        if(data.type)type = data.type;
        if(type == "map"){
            var nodes = data.nodes;
            for(var i in nodes){
                var node = nodes[i];
                var lng = (node.lng*1e-7).toFixed(7);
                var lat = (node.lat*1e-7).toFixed(7);
                var node_id = node.id;
                var node_region = node.region ? node.region : 0;
                var inlinks = node.links;
                var center = [lat,lng];
                g_map.panTo(center,{animate:true,duration:0.5});
                add_center_point(lat,lng,node_id,node_region);
                json_links_parse(inlinks,node.lat,node.lng);
            }
        }else if(type == "rsi"){
            var lng = (data.lng*1e-7).toFixed(7);
            var lat = (data.lat*1e-7).toFixed(7);
            var center = [lat,lng];
            g_map.panTo(center,{animate:true,duration:0.5});
            add_center_point(lat,lng,"--","--");
            var latlngs = [],latlngs_rel = [];
            for(var k in data.alertPath){
                var p = data.alertPath[k];
                var plng = ((data.lng + p.lng)*1e-7).toFixed(7);
                var plat = ((data.lat + p.lat)*1e-7).toFixed(7);
                latlngs_rel.push([p.lat,p.lng]);
                latlngs.push([plat,plng]);
            }
            add_lane_line(latlngs,latlngs_rel,"--");
        }
	})
	.error(function() {alert("parse json file error : "+filename);});
}

//清除特定source的地图控件
function clear_obs(source){
    var len = g_layers.length , i;
    for(i=len-1;i>=0;i--){
        if(g_layers[i].source != source)continue;
        g_map.removeLayer(g_layers[i]);
        g_layers.splice(i,1);
    }
}

// 显示障碍物
function qt_show_obs(str)
{
	var json = JSON.parse(str);
    clear_obs(json.source);
	for(var i in json.array){
		var o = json.array[i];
        add_obs(o.lat*1e-7,o.lng*1e-7,o.id,json.source);
	}
}

// 清除地图控件
function qt_clear()
{
    var len = g_layers.length , i;
    for(i=0;i<len;i++){
        g_map.removeLayer(g_layers[i]);
    }
    g_layers.splice(0,len);
    g_index = 0;
}

// 在中心位置添加marker
function qt_add()
{
    var center = g_map.getCenter();
    add_marker(center.lat,center.lng);
}

// 在目标位置添加marker
function qt_addat(lat,lng)
{
    var center = [lat,lng];
    add_marker(lat,lng);
    g_map.panTo(center,{animate:true,duration:0.5});
}

// 视野转移到目标位置
function qt_go(lat,lng)
{
    var center = [lat,lng];
    g_map.panTo(center,{animate:true,duration:0.5});
}

// 初始化地图
function init_map(){
    var url = "map/{z}/{x}/{y}.jpg";
//    var url = "http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}";
    if(g_map == null){
        g_map = L.map('googleMap',{zoomAnimation:true});
        g_map.setView(g_center,g_zoom);
        g_map.on("moveend",function(event){
            var b = g_map.getBounds();
            var zoom = g_map.getZoom();
            window.chen.get_bounds(b.getSouth(),b.getNorth(),b.getWest(),b.getEast(),zoom);
        })
    }
    if(g_map.hasLayer(g_street))g_map.removeLayer(g_street);
    g_street = L.tileLayer(url,{ minZoom: g_minZoom,maxZoom: g_maxZoom,subdomains:['mt0','mt1','mt2','mt3']});
    g_street.addTo(g_map);
}

$(document).ready(function(){
    init_map();
//    add_marker(28.1195181,112.8520119);
//    add_car(28.1195181,112.8520119,1);
})




