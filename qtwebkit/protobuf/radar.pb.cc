// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: radar.proto

#include "radar.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_radar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_radar_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_radar_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_targetMessage_radar_2eproto;
namespace radarPackage {
class targetMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<targetMessage> _instance;
} _targetMessage_default_instance_;
class TimestampDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timestamp> _instance;
} _Timestamp_default_instance_;
class radarMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<radarMsg> _instance;
} _radarMsg_default_instance_;
}  // namespace radarPackage
static void InitDefaultstargetMessage_radar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radarPackage::_targetMessage_default_instance_;
    new (ptr) ::radarPackage::targetMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radarPackage::targetMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_targetMessage_radar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstargetMessage_radar_2eproto}, {}};

static void InitDefaultsTimestamp_radar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radarPackage::_Timestamp_default_instance_;
    new (ptr) ::radarPackage::Timestamp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radarPackage::Timestamp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_radar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTimestamp_radar_2eproto}, {}};

static void InitDefaultsradarMsg_radar_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::radarPackage::_radarMsg_default_instance_;
    new (ptr) ::radarPackage::radarMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::radarPackage::radarMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_radarMsg_radar_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsradarMsg_radar_2eproto}, {
      &scc_info_Timestamp_radar_2eproto.base,
      &scc_info_targetMessage_radar_2eproto.base,}};

void InitDefaults_radar_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_targetMessage_radar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Timestamp_radar_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_radarMsg_radar_2eproto.base);
}

static ::google::protobuf::Metadata file_level_metadata_radar_2eproto[3];
static constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_radar_2eproto = nullptr;
static constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_radar_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_radar_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, id_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, longitudinalx_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, lateraly_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, velocity_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, heading_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::targetMessage, rcs_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::radarPackage::Timestamp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::Timestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::radarPackage::Timestamp, seconds_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::Timestamp, nanos_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::radarPackage::radarMsg, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::radarMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::radarPackage::radarMsg, time_),
  PROTOBUF_FIELD_OFFSET(::radarPackage::radarMsg, msg_),
  0,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::radarPackage::targetMessage)},
  { 17, 24, sizeof(::radarPackage::Timestamp)},
  { 26, 33, sizeof(::radarPackage::radarMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::radarPackage::_targetMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::radarPackage::_Timestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::radarPackage::_radarMsg_default_instance_),
};

static ::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_radar_2eproto = {
  {}, AddDescriptors_radar_2eproto, "radar.proto", schemas,
  file_default_instances, TableStruct_radar_2eproto::offsets,
  file_level_metadata_radar_2eproto, 3, file_level_enum_descriptors_radar_2eproto, file_level_service_descriptors_radar_2eproto,
};

const char descriptor_table_protodef_radar_2eproto[] =
  "\n\013radar.proto\022\014radarPackage\"t\n\rtargetMes"
  "sage\022\n\n\002id\030\001 \002(\r\022\025\n\rlongitudinalX\030\002 \002(\005\022"
  "\020\n\010lateralY\030\003 \002(\005\022\020\n\010velocity\030\004 \002(\005\022\017\n\007h"
  "eading\030\005 \002(\r\022\013\n\003RCS\030\006 \002(\005\"+\n\tTimestamp\022\017"
  "\n\007seconds\030\001 \002(\003\022\r\n\005nanos\030\002 \002(\005\"[\n\010radarM"
  "sg\022%\n\004time\030\001 \002(\0132\027.radarPackage.Timestam"
  "p\022(\n\003msg\030\002 \003(\0132\033.radarPackage.targetMess"
  "age"
  ;
static ::google::protobuf::internal::DescriptorTable descriptor_table_radar_2eproto = {
  false, InitDefaults_radar_2eproto, 
  descriptor_table_protodef_radar_2eproto,
  "radar.proto", &assign_descriptors_table_radar_2eproto, 283,
};

void AddDescriptors_radar_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_radar_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_radar_2eproto = []() { AddDescriptors_radar_2eproto(); return true; }();
namespace radarPackage {

// ===================================================================

void targetMessage::InitAsDefaultInstance() {
}
class targetMessage::HasBitSetters {
 public:
  static void set_has_id(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_longitudinalx(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
  static void set_has_lateraly(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000004u;
  }
  static void set_has_velocity(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000008u;
  }
  static void set_has_heading(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000010u;
  }
  static void set_has_rcs(targetMessage* msg) {
    msg->_has_bits_[0] |= 0x00000020u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int targetMessage::kIdFieldNumber;
const int targetMessage::kLongitudinalXFieldNumber;
const int targetMessage::kLateralYFieldNumber;
const int targetMessage::kVelocityFieldNumber;
const int targetMessage::kHeadingFieldNumber;
const int targetMessage::kRCSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

targetMessage::targetMessage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:radarPackage.targetMessage)
}
targetMessage::targetMessage(const targetMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rcs_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rcs_));
  // @@protoc_insertion_point(copy_constructor:radarPackage.targetMessage)
}

void targetMessage::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rcs_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rcs_));
}

targetMessage::~targetMessage() {
  // @@protoc_insertion_point(destructor:radarPackage.targetMessage)
  SharedDtor();
}

void targetMessage::SharedDtor() {
}

void targetMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const targetMessage& targetMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_targetMessage_radar_2eproto.base);
  return *internal_default_instance();
}


void targetMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:radarPackage.targetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rcs_) -
        reinterpret_cast<char*>(&id_)) + sizeof(rcs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* targetMessage::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 longitudinalX = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_longitudinalx(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 lateralY = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        set_lateraly(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 velocity = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        set_velocity(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required uint32 heading = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        set_heading(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 RCS = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        set_rcs(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool targetMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radarPackage.targetMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_id(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 longitudinalX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_longitudinalx(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &longitudinalx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lateralY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          HasBitSetters::set_has_lateraly(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lateraly_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 velocity = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          HasBitSetters::set_has_velocity(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 heading = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {
          HasBitSetters::set_has_heading(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 RCS = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {
          HasBitSetters::set_has_rcs(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radarPackage.targetMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radarPackage.targetMessage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void targetMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radarPackage.targetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required int32 longitudinalX = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->longitudinalx(), output);
  }

  // required int32 lateralY = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lateraly(), output);
  }

  // required int32 velocity = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->velocity(), output);
  }

  // required uint32 heading = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->heading(), output);
  }

  // required int32 RCS = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rcs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:radarPackage.targetMessage)
}

::google::protobuf::uint8* targetMessage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:radarPackage.targetMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required int32 longitudinalX = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->longitudinalx(), target);
  }

  // required int32 lateralY = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lateraly(), target);
  }

  // required int32 velocity = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->velocity(), target);
  }

  // required uint32 heading = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->heading(), target);
  }

  // required int32 RCS = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rcs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radarPackage.targetMessage)
  return target;
}

size_t targetMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:radarPackage.targetMessage)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_longitudinalx()) {
    // required int32 longitudinalX = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->longitudinalx());
  }

  if (has_lateraly()) {
    // required int32 lateralY = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lateraly());
  }

  if (has_velocity()) {
    // required int32 velocity = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->velocity());
  }

  if (has_heading()) {
    // required uint32 heading = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heading());
  }

  if (has_rcs()) {
    // required int32 RCS = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcs());
  }

  return total_size;
}
size_t targetMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radarPackage.targetMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required int32 longitudinalX = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->longitudinalx());

    // required int32 lateralY = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lateraly());

    // required int32 velocity = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->velocity());

    // required uint32 heading = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heading());

    // required int32 RCS = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcs());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void targetMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radarPackage.targetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const targetMessage* source =
      ::google::protobuf::DynamicCastToGenerated<targetMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radarPackage.targetMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radarPackage.targetMessage)
    MergeFrom(*source);
  }
}

void targetMessage::MergeFrom(const targetMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radarPackage.targetMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      longitudinalx_ = from.longitudinalx_;
    }
    if (cached_has_bits & 0x00000004u) {
      lateraly_ = from.lateraly_;
    }
    if (cached_has_bits & 0x00000008u) {
      velocity_ = from.velocity_;
    }
    if (cached_has_bits & 0x00000010u) {
      heading_ = from.heading_;
    }
    if (cached_has_bits & 0x00000020u) {
      rcs_ = from.rcs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void targetMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radarPackage.targetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void targetMessage::CopyFrom(const targetMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radarPackage.targetMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool targetMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void targetMessage::Swap(targetMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void targetMessage::InternalSwap(targetMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
  swap(longitudinalx_, other->longitudinalx_);
  swap(lateraly_, other->lateraly_);
  swap(velocity_, other->velocity_);
  swap(heading_, other->heading_);
  swap(rcs_, other->rcs_);
}

::google::protobuf::Metadata targetMessage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_radar_2eproto);
  return ::file_level_metadata_radar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Timestamp::InitAsDefaultInstance() {
}
class Timestamp::HasBitSetters {
 public:
  static void set_has_seconds(Timestamp* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
  static void set_has_nanos(Timestamp* msg) {
    msg->_has_bits_[0] |= 0x00000002u;
  }
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kSecondsFieldNumber;
const int Timestamp::kNanosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:radarPackage.Timestamp)
}
Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seconds_, &from.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&nanos_) -
    reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  // @@protoc_insertion_point(copy_constructor:radarPackage.Timestamp)
}

void Timestamp::SharedCtor() {
  ::memset(&seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nanos_) -
      reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:radarPackage.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
}

void Timestamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Timestamp& Timestamp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Timestamp_radar_2eproto.base);
  return *internal_default_instance();
}


void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:radarPackage.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&seconds_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nanos_) -
        reinterpret_cast<char*>(&seconds_)) + sizeof(nanos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Timestamp::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required int64 seconds = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        set_seconds(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // required int32 nanos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        set_nanos(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radarPackage.Timestamp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          HasBitSetters::set_has_seconds(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 nanos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          HasBitSetters::set_has_nanos(this);
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nanos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radarPackage.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radarPackage.Timestamp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radarPackage.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  // required int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nanos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:radarPackage.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:radarPackage.Timestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 seconds = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  // required int32 nanos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nanos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radarPackage.Timestamp)
  return target;
}

size_t Timestamp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:radarPackage.Timestamp)
  size_t total_size = 0;

  if (has_seconds()) {
    // required int64 seconds = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  if (has_nanos()) {
    // required int32 nanos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nanos());
  }

  return total_size;
}
size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radarPackage.Timestamp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 seconds = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());

    // required int32 nanos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->nanos());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radarPackage.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const Timestamp* source =
      ::google::protobuf::DynamicCastToGenerated<Timestamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radarPackage.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radarPackage.Timestamp)
    MergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radarPackage.Timestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      seconds_ = from.seconds_;
    }
    if (cached_has_bits & 0x00000002u) {
      nanos_ = from.nanos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radarPackage.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radarPackage.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timestamp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(seconds_, other->seconds_);
  swap(nanos_, other->nanos_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_radar_2eproto);
  return ::file_level_metadata_radar_2eproto[kIndexInFileMessages];
}


// ===================================================================

void radarMsg::InitAsDefaultInstance() {
  ::radarPackage::_radarMsg_default_instance_._instance.get_mutable()->time_ = const_cast< ::radarPackage::Timestamp*>(
      ::radarPackage::Timestamp::internal_default_instance());
}
class radarMsg::HasBitSetters {
 public:
  static const ::radarPackage::Timestamp& time(const radarMsg* msg);
  static void set_has_time(radarMsg* msg) {
    msg->_has_bits_[0] |= 0x00000001u;
  }
};

const ::radarPackage::Timestamp&
radarMsg::HasBitSetters::time(const radarMsg* msg) {
  return *msg->time_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int radarMsg::kTimeFieldNumber;
const int radarMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

radarMsg::radarMsg()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:radarPackage.radarMsg)
}
radarMsg::radarMsg(const radarMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      msg_(from.msg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_time()) {
    time_ = new ::radarPackage::Timestamp(*from.time_);
  } else {
    time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:radarPackage.radarMsg)
}

void radarMsg::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_radarMsg_radar_2eproto.base);
  time_ = nullptr;
}

radarMsg::~radarMsg() {
  // @@protoc_insertion_point(destructor:radarPackage.radarMsg)
  SharedDtor();
}

void radarMsg::SharedDtor() {
  if (this != internal_default_instance()) delete time_;
}

void radarMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const radarMsg& radarMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_radarMsg_radar_2eproto.base);
  return *internal_default_instance();
}


void radarMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:radarPackage.radarMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(time_ != nullptr);
    time_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* radarMsg::_InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) {
  while (!ctx->Done(&ptr)) {
    ::google::protobuf::uint32 tag;
    ptr = ::google::protobuf::internal::ReadTag(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // required .radarPackage.Timestamp time = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ctx->ParseMessage(mutable_time(), ptr);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .radarPackage.targetMessage msg = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ctx->ParseMessage(add_msg(), ptr);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ctx->Done(&ptr)) return ptr;
        } while ((::google::protobuf::internal::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          return ptr;
        }
        ptr = UnknownFieldParse(tag,
          _internal_metadata_.mutable_unknown_fields(), ptr, ctx);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        break;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool radarMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:radarPackage.radarMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .radarPackage.Timestamp time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .radarPackage.targetMessage msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:radarPackage.radarMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:radarPackage.radarMsg)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void radarMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:radarPackage.radarMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .radarPackage.Timestamp time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::time(this), output);
  }

  // repeated .radarPackage.targetMessage msg = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->msg(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:radarPackage.radarMsg)
}

::google::protobuf::uint8* radarMsg::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:radarPackage.radarMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .radarPackage.Timestamp time = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::time(this), target);
  }

  // repeated .radarPackage.targetMessage msg = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->msg_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->msg(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:radarPackage.radarMsg)
  return target;
}

size_t radarMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:radarPackage.radarMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .radarPackage.Timestamp time = 1;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .radarPackage.targetMessage msg = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->msg_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->msg(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void radarMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:radarPackage.radarMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const radarMsg* source =
      ::google::protobuf::DynamicCastToGenerated<radarMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:radarPackage.radarMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:radarPackage.radarMsg)
    MergeFrom(*source);
  }
}

void radarMsg::MergeFrom(const radarMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:radarPackage.radarMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
  if (from.has_time()) {
    mutable_time()->::radarPackage::Timestamp::MergeFrom(from.time());
  }
}

void radarMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:radarPackage.radarMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void radarMsg::CopyFrom(const radarMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:radarPackage.radarMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool radarMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->msg())) return false;
  if (has_time()) {
    if (!this->time_->IsInitialized()) return false;
  }
  return true;
}

void radarMsg::Swap(radarMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void radarMsg::InternalSwap(radarMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  CastToBase(&msg_)->InternalSwap(CastToBase(&other->msg_));
  swap(time_, other->time_);
}

::google::protobuf::Metadata radarMsg::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_radar_2eproto);
  return ::file_level_metadata_radar_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace radarPackage
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::radarPackage::targetMessage* Arena::CreateMaybeMessage< ::radarPackage::targetMessage >(Arena* arena) {
  return Arena::CreateInternal< ::radarPackage::targetMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::radarPackage::Timestamp* Arena::CreateMaybeMessage< ::radarPackage::Timestamp >(Arena* arena) {
  return Arena::CreateInternal< ::radarPackage::Timestamp >(arena);
}
template<> PROTOBUF_NOINLINE ::radarPackage::radarMsg* Arena::CreateMaybeMessage< ::radarPackage::radarMsg >(Arena* arena) {
  return Arena::CreateInternal< ::radarPackage::radarMsg >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
